#!/usr/bin/env bash

# If the Unique ID is 0, the user has root privileges
[ "$UID" -eq 0 ] || exec sudo -p "[Need sudo for installing initial script] Password: " "$0" "$@"

# Exit codes. Ref -> https://www.cyberciti.biz/faq/linux-bash-exit-status-set-exit-statusin-bash/
EC_SUCCEESS=0
EC_FILE_EXISTS=17
EC_NOT_IMPLEMENTED=38
EC_PACKAGE_NOT_INSTALLED=65

set -e

setup_colors() {
  if [[ -t 2 ]] && [[ $NO_COLOR == 1 ]] && [[ "${TERM-}" != "dumb" ]]; then
    # Color codes
    RED='\033[1;31m'
    YELLOW='\033[1;33m'
    BLUE="\\033[38;5;27m"
    SEA="\\033[38;5;49m"
    GREEN='\033[1;32m'
    CYAN='\033[1;36m'
    NC='\033[0m'

    # Emoji codes
    CHECK_MARK="${GREEN}\xE2\x9C\x94${NC}"
    X_MARK="${RED}\xE2\x9C\x96${NC}"
    PIN="${RED}\xF0\x9F\x93\x8C${NC}"
    CLOCK="${GREEN}\xE2\x8C\x9B${NC}"
    ARROW="${SEA}\xE2\x96\xB6${NC}"
    BOOK="${RED}\xF0\x9F\x93\x8B${NC}"
    HOT="${ORANGE}\xF0\x9F\x94\xA5${NC}"
    WARNING="${GREEN}\xF0\x9F\x9A\xA8${NC}"
    RIGHT_ANGLE="${GREEN}\xE2\x88\x9F${NC}"
  else
    RED='' YELLOW='' BLUE='' SEA='' GREEN='' CYAN='' NC='' CHECK_MARK='' X_MARK='' PIN='' CLOCK='' ARROW='' BOOK='' HOT='' WARNING='' RIGHT_ANGLE=''
  fi
}

show_usage() {
  local exit_code=${1:-$EC_SUCCEESS}

  printf "%b\n" "$(
    cat <<EOF
USAGE: <install-cmd> <flags>
DESCRIPTION: Simple install command for \"dot\" script
OPTIONS:
  -h, --help            Print this help message and exit
  -i, --install-deps    Install missing dependencies without prompting
  -u, --upgrade         Re-write the \"dot\" script if exists without prompting
  --verbose             Show more stuff in case of an error (set -x)
  -n, --no-color        Run script without colors or emojis
EOF
  )"

  exit $exit_code
}

abort() {
  local msg="$1"
  local exit_code="${2:-1}"

  printf "${RED}%s\n${NC}" "$msg" >&2
  exit $exit_code
}

exists() {
  local testing_command="$1"

  if command -v $testing_command 2>&1 >/dev/null; then
    echo 0
  else
    echo 1
  fi
}

ask_confirmation() {
  local prompt="$1"
  local action="$2"
  local failure_exit_code="${3:-1}"

  #local deny_msg="${4:-Please resolve the issue and retry again.}"
  local deny_msg="Confirmation denied! Please resolve the issue and retry again."
  # local accept_msg="${5:-}"
  local accept_msg="Doing the thing!"

  while true; do
    read -p "$prompt (y/n) " choice
    case "$choice" in
    y | Y)
      # echo -e $accept_msg
      $action
      break
      ;;
    n | N)
      abort "$deny_msg" "$failure_exit_code"
      ;;
    *)
      echo -e "Invalid choice \"$choice\", pass \"y\" or \"n\" to accept or deny confirmation"
      echo
      ;;
    esac
  done
}

ensure_install() {
  local pkg="$1"
  local install_pkg_func="$2"

  echo -e "${ARROW} Ensure installing ${pkg}"

  if [[ ! $(exists $pkg) == 0 ]]; then
    echo -e "${WARNING} Could not find \"${pkg}\" in your PATH"
    if [[ $INSTALL_DEPS_NO_PROMPT == 0 ]]; then
      $install_pkg_func
    else
      ask_confirmation "Do you want to install ${pkg}?" $install_pkg_func $EC_PACKAGE_NOT_INSTALLED
    fi
  fi
}

install_dot() {
  curl -fsSL https://raw.githubusercontent.com/MahdiAghaei1/.dotfiles/master/init >temp_dotfiles_executable &&
    mv temp_dotfiles_executable /usr/local/bin/dotfiles &&
    chmod +x /usr/local/bin/dotfiles
}

install_brew() {
  bash -c \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)\"
}

install_gum() {
  echo "Installing gum..."
  exit $EC_NOT_IMPLEMENTED
}

install_ansible() {
  echo "Installing ansible..."
  exit $EC_NOT_IMPLEMENTED
}

INSTALL_DEPS_NO_PROMPT=1
UPGRADE_DOT_SCRIPT_NO_PROMPT=1
NO_COLOR=1

# TODO: No color option? even using colors in script?

for arg in "$@"; do
  case $arg in
  --verbose)
    set -x
    ;;
  -h | --help)
    show_usage $EC_SUCCEESS
    ;;
  -i | --install-deps)
    INSTALL_DEPS_NO_PROMPT=0
    ;;
  -u | --upgrade)
    UPGRADE_DOT_SCRIPT_NO_PROMPT=0
    ;;
  -n | --no-color)
    NO_COLOR=0
    ;;
  *)
    abort "Unkown flag $arg"
    ;;

  esac
done

setup_colors

ensure_install brew install_brew
ensure_install gum install_gum
ensure_install ansible install_ansible

if [[ $(exists dot) == 0 ]]; then
  echo -e "There is already a \'dot\' executable found in your \$PATH"
  if [[ $UPGRADE_DOT_SCRIPT_NO_PROMPT == 0 ]]; then
    install_dot
  else
    ask_confirmation "Do you want to re-write/upgrade it?" install_dot $EC_FILE_EXISTS
  fi
fi

echo -e "Success! Now run \`dot\` (You may need to reload your terminal session)"

exit $EC_SUCCEESS
