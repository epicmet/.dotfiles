#!/usr/bin/env bash

# If the Unique ID is 0, the user has root privileges
[ "$UID" -eq 0 ] || exec sudo -p "[Need sudo for installing initial script] Password: " "$0" "$@"

# Color codes
RED='\033[1;31m'
YELLOW='\033[1;33m'
BLUE="\\033[38;5;27m"
SEA="\\033[38;5;49m"
GREEN='\033[1;32m'
CYAN='\033[1;36m'
NC='\033[0m'

# Emoji codes
CHECK_MARK="${GREEN}\xE2\x9C\x94${NC}"
X_MARK="${RED}\xE2\x9C\x96${NC}"
PIN="${RED}\xF0\x9F\x93\x8C${NC}"
CLOCK="${GREEN}\xE2\x8C\x9B${NC}"
ARROW="${SEA}\xE2\x96\xB6${NC}"
BOOK="${RED}\xF0\x9F\x93\x8B${NC}"
HOT="${ORANGE}\xF0\x9F\x94\xA5${NC}"
WARNING="${GREEN}\xF0\x9F\x9A\xA8${NC}"
RIGHT_ANGLE="${GREEN}\xE2\x88\x9F${NC}"

# Exit codes. Ref -> https://www.cyberciti.biz/faq/linux-bash-exit-status-set-exit-statusin-bash/
EC_PACKAGE_NOT_INSTALLED=65
EC_FILE_EXISTS=17

set -e

# TODO:
# - Usage function and --help
# - Parse args (https://stackoverflow.com/questions/192249/how-do-i-parse-command-line-arguments-in-bash)

abort() {
  local msg="$1"
  local exit_code="${2:-1}"

  printf "${RED}%s\n${NC}" "$msg" >&2
  exit $exit_code
}

exists() {
  local testing_command="$1"

  if command -v $testing_command 2>&1 >/dev/null; then
    echo 0
  else
    echo 1
  fi
}

ask_confirmation() {
  local prompt="$1"
  local action="$2"
  local failure_exit_code="${3:-1}"

  #local deny_msg="${4:-Please resolve the issue and retry again.}"
  local deny_msg="Confirmation denied! Please resolve the issue and retry again."
  # local accept_msg="${5:-}"
  local accept_msg="Doing the thing!"

  while true; do
    read -p "$prompt (y/n) " choice
    case "$choice" in
    y | Y)
      # echo -e $accept_msg
      $action
      break
      ;;
    n | N)
      abort "$deny_msg" "$failure_exit_code"
      ;;
    *)
      echo -e "Invalid choice \"$choice\", pass \"y\" or \"n\" to accept or deny confirmation"
      echo
      ;;
    esac
  done
}

install_dot() {
  curl -fsSL https://raw.githubusercontent.com/MahdiAghaei1/.dotfiles/master/init >temp_dotfiles_executable &&
    mv temp_dotfiles_executable /usr/local/bin/dotfiles &&
    chmod +x /usr/local/bin/dotfiles
}

install_brew() {
  bash -c \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)\"
}

if [[ ! $(exists brew) == 0 ]]; then
  # TODO: see if user passed --install-deps ?
  echo -e "Could not find \"brew\" in your PATH"
  ask_confirmation "Do you want to install brew?" install_brew $EC_PACKAGE_NOT_INSTALLED
fi

if [[ ! $(exists gum) == 0 ]]; then
  # TODO: see if user passed --install-deps ?
  echo "WARNING"
  echo -e "Installing gum..."
  echo
fi

if [[ ! $(exists ansible) == 0 ]]; then
  # TODO: see if user passed --install-deps ?
  echo "WARNING"
  echo -e "Installing ansible..."
  echo
fi

if [[ $(exists dot) == 0 ]]; then
  echo -e "There is already a \'dotfiles\' executable found in your \$PATH"
  # TODO: see if user passed --upgrade ?
  ask_confirmation "Do you want to re-write/upgrade it?" install_dot $EC_FILE_EXISTS
fi

echo -e "Success! Now run \`dot\` (You may need to reload your terminal session)"
